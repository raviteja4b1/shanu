---
# This playbook would rename the VM's hostname and unjoin them from STP domain
- hosts: all
  gather_facts: false
  tasks:
    - add_host: 
        host: '{{target_machine}}'
      when: target_machine is defined

- name: refresh virtual machines
  hosts: '{{target_machine | default("all")}}'
  gather_facts: true
  vars_files:
    - phase1_vault.yml
  vars:
    ansible_winrm_server_cert_validation: ignore
    ansible_ssh_port: 5986
    ansible_winrm_transport: ntlm
    ansible_connection: winrm
    store_number: "{{store_number}}"
    mpointer_password: "{{password}}"
    
  tasks: 
   - name: Rename VM's and unjoin from domain
     win_shell: 
         $pass = ConvertTo-SecureString '{{password}}' -AsPlainText -Force;
         $Cred = New-Object System.Management.Automation.PSCredential ('{{ item | replace(store_number, '000stg') }}\mpointer', $pass );
         Invoke-Command -VMName "{{ item }}" -Credential $Cred -ScriptBlock {
            $sessioncred = $Using:Cred;
            Remove-Computer -UnjoinDomainCredential $sessioncred -Force;
            Start-Sleep -Second 90;
            Rename-Computer -NewName {{item}} -Force -Restart }
     loop:
      - 'stp-{{store_number}}app1'
      - 'stp-{{store_number}}adc1'
  #  - name: Rename sql server and unjoin from domain
  #    win_shell: 
  #        $pass = ConvertTo-SecureString '{{password}}' -AsPlainText -Force;
  #        $Cred = New-Object System.Management.Automation.PSCredential ('STP-WHALLEYSQL1\mpointer', $pass );
  #        Invoke-Command -VMName stp-{{store_number}}sql1 -Credential $Cred -ScriptBlock {
  #           $sessioncred = $Using:Cred;
  #           Remove-Computer -UnjoinDomainCredential $sessioncred -Force;
  #           Start-Sleep -Second 90;
  #           Rename-Computer -NewName 'stp-{{store_number}}sql1' -Force -Restart }

