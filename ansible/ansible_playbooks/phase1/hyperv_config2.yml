---
- hosts: all
  gather_facts: false
  tasks:
    - add_host: 
        host: '{{target_machine}}'
      when: target_machine is defined
# This play is performed to validate and run initial configuration of the Hyperv
- name: validate and configure the hyperv
  hosts: '{{target_machine | default("all")}}'
  vars_files:
    - phase1_vault.yml
  gather_facts: false
  vars:
    ansible_connection: winrm
    ansible_winrm_server_cert_validation: ignore
    ansible_ssh_port: 5986
    ansible_winrm_transport: ntlm
    timezone: '{{ timezone }}'
  tasks:
   - win_partition:
       drive_letter: F
       disk_number: 0
       partition_size: 60 GB
   - name: creating disk F
     win_partition:
       drive_letter: F
       disk_number: 0
       partition_size: -1
   - name: Format the partition F as NTFS and label it
     win_format:
       drive_letter: F
       file_system: NTFS
       new_label: Data
       force: yes
   - name: creating disk D
     win_partition:
       drive_letter: D
       disk_number: 2
       partition_size: -1
   - name: Format the partition D as NTFS and label it
     win_format:
       drive_letter: D
       file_system: NTFS
       new_label: Data
   - name: Disable Windows firewall  
     win_firewall:
       state: disabled
       profiles:
       - Domain
       - Private
       - Public
     tags: disabled_firewall
   - name: Set Hypervisor to autolaunch
     win_shell: |
       bcdedit /set hypervisorlaunchtype auto 
   - name: Verify/activate Window
     win_product_facts:
   - debug:
       msg: 'This Windows is {{ansible_os_license_status}}'    
   - name: Set Server Time Zone
     win_timezone:
       timezone: "{{ timezone }}"
   - name: create directories for hyper-v
     win_file:
       path: "{{ item }}"
       state: directory
     loop:
       - F:\Hyper-V\Virtual Hard Disks
       - F:\Hyper-V\Virtual Machines
   - name: Set VM Path
     win_shell: |
       Set-VMHost -VirtualHardDiskPath "F:\Hyper-V\Virtual Hard Disks" -VirtualMachinePath "F:\Hyper-V\Virtual Machines"
       Set-VMHost -EnableEnhancedSessionMode $True
     register: set_path
   - debug:
       msg: "{{ set_path }}"
   - name: rebooting the host 
     win_reboot: